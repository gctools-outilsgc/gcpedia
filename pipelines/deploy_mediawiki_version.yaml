trigger:  # don't trigger automatically
- none



jobs:
- job: build
  displayName: build specific MW version code
  pool:
    vmImage: ubuntu-latest
  steps:
  - bash: |
      php --version
      composer --version
      git --version
      curl --version
      mkdir -p /tmp/gcpedia_build/MW_$MEDIAWIKI_VERSION && cd /tmp/gcpedia_build/MW_$MEDIAWIKI_VERSION
      curl -fSL "https://releases.wikimedia.org/mediawiki/${MEDIAWIKI_MAJOR_VERSION}/mediawiki-${MEDIAWIKI_VERSION}.tar.gz" -o mediawiki.tar.gz
      curl -fSL "https://releases.wikimedia.org/mediawiki/${MEDIAWIKI_MAJOR_VERSION}/mediawiki-${MEDIAWIKI_VERSION}.tar.gz.sig" -o mediawiki.tar.gz.sig
      export GNUPGHOME="$(mktemp -d)"
      gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \
      D7D6767D135A514BEB86E9BA75682B08E8A3FEC4 \
      441276E9CCD15F44F6D97D18C119E1A64D70938E \
      F7F780D82EBFB8A56556E7EE82403E59F9F8CD79 \
      1D98867E82982C8FE0ABC25F9B69B3109D3BB7B0
      gpg --batch --verify mediawiki.tar.gz.sig mediawiki.tar.gz
      tar -x --strip-components=1 -f mediawiki.tar.gz
      gpgconf --kill all
      rm -r "$GNUPGHOME" mediawiki.tar.gz.sig mediawiki.tar.gz
      ls -la
    displayName: prepare gcpedia code build environment
    env:
      MEDIAWIKI_MAJOR_VERSION: $(MEDIAWIKI_MAJOR_VERSION)
      MEDIAWIKI_VERSION: $(MEDIAWIKI_VERSION)

  - task: ArchiveFiles@2
    displayName: 'Archive files'
    inputs:
      rootFolderOrFile: '/tmp/gcpedia_build'
      includeRootFolder: true
      archiveType: zip
      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      replaceExistingArchive: true

  - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    displayName: 'Upload package'
    artifact: drop

- job: deploy
  displayName: deploy gcpedia site code
  pool: $(deployPool)
  dependsOn: build
  condition: succeeded()
  steps:
  - download: current
    artifact: drop
  - task: AzureWebApp@1
    displayName: 'Deploy Azure Web App gcpedia code'
    inputs:
      azureSubscription: $(azSubServiceConnection)
      appName: $(appName)
      package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
